package edu.pjwstk.mas_project_vovkotrub_yaroslav_s18461.gui.view;

import edu.pjwstk.mas_project_vovkotrub_yaroslav_s18461.model.Vehicle;
import lombok.Data;
import org.springframework.stereotype.Controller;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

/**
 * Class representing configuration for the salons' vehicles list and their brief information panel
 */
@Data
@Controller
public class SalonsVehicleList {
    private JButton mainMenuButton;
    private JPanel vehiclePanel;
    private JList<Vehicle> vehicleList;
    private JPanel salonInfo;
    private JPanel vehicleInfo;
    private JTextPane salonInfoPane;
    private JTextPane vehicleInfoPane;
    private JTextPane salonName;
    private JLabel logo;
    private JTextPane vehicleName;
    private JTextPane servicePassportPane;
    private DefaultListModel<Vehicle> vehicleListModel;

    private void createUIComponents() {
        vehicleListModel = new DefaultListModel<>();
        vehicleList = new JList<>(vehicleListModel);
        vehicleList.setCellRenderer(new VehicleListCellRender());
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        vehiclePanel = new JPanel();
        vehiclePanel.setLayout(new GridBagLayout());
        vehiclePanel.setMaximumSize(new Dimension(700, 520));
        vehiclePanel.setMinimumSize(new Dimension(700, 520));
        vehiclePanel.setPreferredSize(new Dimension(700, 520));
        mainMenuButton = new JButton();
        mainMenuButton.setBackground(new Color(-16728833));
        Font mainMenuButtonFont = this.$$$getFont$$$("Century Gothic", Font.BOLD, 20, mainMenuButton.getFont());
        if (mainMenuButtonFont != null) mainMenuButton.setFont(mainMenuButtonFont);
        mainMenuButton.setForeground(new Color(-1));
        mainMenuButton.setMaximumSize(new Dimension(196, 60));
        mainMenuButton.setMinimumSize(new Dimension(196, 60));
        mainMenuButton.setPreferredSize(new Dimension(196, 60));
        mainMenuButton.setText("Main menu");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.gridwidth = 3;
        gbc.weightx = 1.0;
        gbc.insets = new Insets(15, 0, 15, 0);
        vehiclePanel.add(mainMenuButton, gbc);
        final JScrollPane scrollPane1 = new JScrollPane();
        scrollPane1.setBackground(new Color(-3748915));
        scrollPane1.setMaximumSize(new Dimension(300, 600));
        scrollPane1.setMinimumSize(new Dimension(300, 600));
        scrollPane1.setPreferredSize(new Dimension(300, 600));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridheight = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.insets = new Insets(15, 15, 0, 0);
        vehiclePanel.add(scrollPane1, gbc);
        vehicleList.setBackground(new Color(-3748915));
        vehicleList.setMaximumSize(new Dimension(300, 600));
        vehicleList.setMinimumSize(new Dimension(300, 600));
        vehicleList.setPreferredSize(new Dimension(300, 600));
        scrollPane1.setViewportView(vehicleList);
        salonInfo = new JPanel();
        salonInfo.setLayout(new GridBagLayout());
        salonInfo.setBackground(new Color(-3748915));
        salonInfo.setMaximumSize(new Dimension(400, 150));
        salonInfo.setMinimumSize(new Dimension(400, 150));
        salonInfo.setPreferredSize(new Dimension(400, 150));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.insets = new Insets(15, 15, 0, 15);
        vehiclePanel.add(salonInfo, gbc);
        salonInfoPane = new JTextPane();
        salonInfoPane.setBackground(new Color(-3748915));
        Font salonInfoPaneFont = this.$$$getFont$$$("Century Gothic", Font.BOLD, 18, salonInfoPane.getFont());
        if (salonInfoPaneFont != null) salonInfoPane.setFont(salonInfoPaneFont);
        salonInfoPane.setForeground(new Color(-14013910));
        salonInfoPane.setMaximumSize(new Dimension(400, 105));
        salonInfoPane.setMinimumSize(new Dimension(400, 105));
        salonInfoPane.setPreferredSize(new Dimension(400, 105));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        salonInfo.add(salonInfoPane, gbc);
        salonName = new JTextPane();
        salonName.setBackground(new Color(-3748915));
        Font salonNameFont = this.$$$getFont$$$("Century Gothic", Font.BOLD | Font.ITALIC, 36, salonName.getFont());
        if (salonNameFont != null) salonName.setFont(salonNameFont);
        salonName.setForeground(new Color(-14013910));
        salonName.setMaximumSize(new Dimension(400, 45));
        salonName.setMinimumSize(new Dimension(400, 45));
        salonName.setPreferredSize(new Dimension(400, 45));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        salonInfo.add(salonName, gbc);
        vehicleInfo = new JPanel();
        vehicleInfo.setLayout(new GridBagLayout());
        vehicleInfo.setBackground(new Color(-3748915));
        vehicleInfo.setMaximumSize(new Dimension(400, 300));
        vehicleInfo.setMinimumSize(new Dimension(400, 300));
        vehicleInfo.setPreferredSize(new Dimension(400, 300));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.insets = new Insets(15, 15, 0, 15);
        vehiclePanel.add(vehicleInfo, gbc);
        vehicleInfoPane = new JTextPane();
        vehicleInfoPane.setBackground(new Color(-3748915));
        Font vehicleInfoPaneFont = this.$$$getFont$$$("Century Gothic", Font.BOLD, 18, vehicleInfoPane.getFont());
        if (vehicleInfoPaneFont != null) vehicleInfoPane.setFont(vehicleInfoPaneFont);
        vehicleInfoPane.setForeground(new Color(-14013910));
        vehicleInfoPane.setMaximumSize(new Dimension(225, 300));
        vehicleInfoPane.setMinimumSize(new Dimension(225, 300));
        vehicleInfoPane.setPreferredSize(new Dimension(225, 300));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(5, 0, 0, 0);
        vehicleInfo.add(vehicleInfoPane, gbc);
        logo = new JLabel();
        logo.setMaximumSize(new Dimension(175, 100));
        logo.setMinimumSize(new Dimension(175, 100));
        logo.setPreferredSize(new Dimension(175, 100));
        logo.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(5, 5, 0, 0);
        vehicleInfo.add(logo, gbc);
        vehicleName = new JTextPane();
        vehicleName.setBackground(new Color(-3748915));
        Font vehicleNameFont = this.$$$getFont$$$("Century Gothic", Font.BOLD | Font.ITALIC, 26, vehicleName.getFont());
        if (vehicleNameFont != null) vehicleName.setFont(vehicleNameFont);
        vehicleName.setForeground(new Color(-14013910));
        vehicleName.setMaximumSize(new Dimension(300, 100));
        vehicleName.setMinimumSize(new Dimension(300, 100));
        vehicleName.setPreferredSize(new Dimension(300, 100));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        vehicleInfo.add(vehicleName, gbc);
        servicePassportPane = new JTextPane();
        servicePassportPane.setBackground(new Color(-3748915));
        Font servicePassportPaneFont = this.$$$getFont$$$("Century Gothic", Font.BOLD | Font.ITALIC, 18, servicePassportPane.getFont());
        if (servicePassportPaneFont != null) servicePassportPane.setFont(servicePassportPaneFont);
        servicePassportPane.setForeground(new Color(-15770193));
        servicePassportPane.setMaximumSize(new Dimension(150, 30));
        servicePassportPane.setMinimumSize(new Dimension(150, 30));
        servicePassportPane.setPreferredSize(new Dimension(150, 30));
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.SOUTH;
        gbc.insets = new Insets(0, 0, 25, 10);
        vehicleInfo.add(servicePassportPane, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return vehiclePanel;
    }

    private class VehicleListCellRender extends JLabel implements ListCellRenderer<Vehicle> {

        public VehicleListCellRender() {
            setOpaque(true);
        }

        @Override
        public Component getListCellRendererComponent(JList<? extends Vehicle> jList, Vehicle vehicle, int i, boolean b, boolean b1) {
            setText(vehicle.getManufacturer().getName() + " " + vehicle.getModelName());
            setFont(new Font("Century Gothic", Font.BOLD, 18));
            if (b) {
                setBackground(jList.getSelectionBackground());
                setForeground(jList.getSelectionForeground());
            } else {
                setBackground(jList.getBackground());
                setForeground(jList.getForeground());
            }
            return this;
        }
    }
}
